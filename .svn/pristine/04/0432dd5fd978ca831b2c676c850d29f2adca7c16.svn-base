package com.netmarch.figurecloud.auth.core.security.authenticate.jwt;

import com.netmarch.figurecloud.auth.core.security.exceptions.GeneralAuthenticationException;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;
import org.springframework.security.web.util.matcher.OrRequestMatcher;
import org.springframework.security.web.util.matcher.RequestMatcher;

import javax.servlet.http.HttpServletRequest;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;


/**
* @Description: 需要跳过请求配置器
* @Author: fengxiang
* @Date: 2019/2/15 10:11
*/
public class SkipPathRequestMatcher implements RequestMatcher {
    private OrRequestMatcher matchers;
    private RequestMatcher processingMatcher;
    
    public SkipPathRequestMatcher(List<String> pathsToSkip, String processingPath) {
        pathsToSkip = Optional.of(pathsToSkip)
        .orElseThrow(()-> new GeneralAuthenticationException("在方法SkipPathRequestMatcher中，参数pathsToSkip不能为空。"));
        List<RequestMatcher> m = pathsToSkip.stream().map(path -> new AntPathRequestMatcher(path)).collect(Collectors.toList());
        matchers = new OrRequestMatcher(m);
        processingMatcher = new AntPathRequestMatcher(processingPath);
    }

    @Override
    public boolean matches(HttpServletRequest request) {
        if (matchers.matches(request)) {
            return false;
        }
        return processingMatcher.matches(request) ? true : false;
    }
}
