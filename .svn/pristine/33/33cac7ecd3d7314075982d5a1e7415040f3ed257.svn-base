package com.netmarch.fdfs.config;

import com.netmarch.fdfs.system.LoginInterceptor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.HttpPutFormContentFilter;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

/**
 * @Author:xieqiang
 * @Date:2019/2/27
 */

@Configuration
//@EnableWebMvc
@Component
public class WebMvcConfiguration  implements WebMvcConfigurer {

//    @Override
//    public void addViewControllers(ViewControllerRegistry registry){
//        registry.addViewController("uums/").setViewName("login");
//    }

    /**
     * 添加静态资源文件，外部可以直接访问地址
     * @param registry
     */
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
       registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");
       registry.addResourceHandler("resource/**").addResourceLocations("file:/upload/");
    }

    @Autowired
    private LoginInterceptor loginInterceptor;
    // 注册拦截器，我们自己写好的拦截器需要通过这里添加注册才能生效
//    @Override
//    public void addInterceptors(InterceptorRegistry registry) {
//        // addPathPatterns("/**") 表示拦截所有的请求，
//        // excludePathPatterns("/login", "/register") 表示除了登陆与注册之外，因为登陆注册不需要登陆也可以访问
//        registry.addInterceptor(loginInterceptor).
//                addPathPatterns("/**").
//                excludePathPatterns("/login","/userLogin","/static/**", "/resource/**");
//    }

    @Bean
    public HttpPutFormContentFilter httpPutFormContentFilter() {
        return new HttpPutFormContentFilter();
    }

}