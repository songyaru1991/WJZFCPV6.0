package com.netmarch.wssacw.system.controller;

import com.alibaba.fastjson.JSON;
import com.github.pagehelper.Page;
import com.netmarch.wssacw.common.controller.FrontBaseController;
import com.netmarch.wssacw.common.thymeleaf.AuthElementTagProcessor;
import com.netmarch.wssacw.common.utils.UsersUtil;
import com.netmarch.wssacw.system.bean.StaticObj;
import com.netmarch.wssacw.system.bean.SysResource;
import com.netmarch.wssacw.system.bean.SysRole;
import com.netmarch.wssacw.system.service.SysRoleService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import util.web.JsonResult;
import util.web.ResultCodes;

import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.List;


@Controller
@RequestMapping("/role/*")
@Slf4j
public class SysRoleController extends FrontBaseController{
    @Autowired
    HttpServletRequest request;

    @Autowired
    private SysRoleService sysRoleService;

    @Autowired
    private UsersUtil usersUtil;

    @RequestMapping("list")
    public String list(SysRole role, String keyword, Model model){
        String user_Id="";
        try {
            user_Id=usersUtil.getLoginUser_Id();
            Page<SysRole> roles = sysRoleService.getRoleList(role, keyword);
            model.addAttribute("list", roles);
            model.addAttribute("keyword", keyword);
            log(user_Id, "查询列表", "获取角色信息列表", "角色管理(涉案财物系统)", false);
        } catch (Exception e) {
            e.printStackTrace();
            log(user_Id, "查询列表",  e.toString(), "角色管理(涉案财物系统)", true);
        }
        return "role/list";
    }

    /**
     * 添加页面
     * @param model
     * @return
     */
    @RequestMapping("toAdd")
    public String toAdd(Model model){
        String user_Id="";
        try {
            user_Id= usersUtil.getLoginUser_Id();
            log(user_Id,"点击角色新增按钮","打开角色新增页面","角色管理(涉案财物系统)",false);
        } catch (Exception e) {
            log(user_Id,"点击角色新增按钮",e.toString(),"角色管理(涉案财物系统)",true);
            e.printStackTrace();
        }
        return "role/add";
    }

    /**
     * 编辑页面
     * @param model
     * @return
     */
    @GetMapping("toEdit")
    public String toEdit(Model model, Integer id){
        String user_Id = "";
        try {
            user_Id = usersUtil.getLoginUser_Id();

            SysRole bean = sysRoleService.getRoleById(id);
            List<SysResource> resources = sysRoleService.getRoleResources(id);
            List<Integer> resids = new ArrayList<>();
            for (SysResource sr : resources) {
                resids.add(sr.getId());
            }
            model.addAttribute("bean", bean);
            model.addAttribute("resids", resids);
            String jsonResults = JSON.toJSONString(resources);
            log(user_Id, "点击角色编辑按钮", "编辑前角色信息为:" + jsonResults, "角色管理(涉案财物系统)", false);
        } catch (Exception e) {
            log(user_Id, "点击角色编辑按钮", e.toString(), "角色管理(涉案财物系统)", true);
            e.printStackTrace();
        }
        return "role/edit";
    }

    /**
     * 保存
     * @param role
     * @return
     */
    @RequestMapping("/add")
    @ResponseBody
    public JsonResult save(SysRole role){
        String loginUser_Id="";
        try {
            loginUser_Id= usersUtil.getLoginUser_Id();
            int countName = sysRoleService.checkRepeatName(role);
            if(countName > 0){
                return new JsonResult(ResultCodes.ERROR, StaticObj.REPEAT_MSG_NAME);
            }
            int countCode = sysRoleService.checkRepeatCode(role);
            if(countCode > 0){
                return new JsonResult(ResultCodes.ERROR, StaticObj.REPEAT_MSG_CODE);
            }
            role.setCreateUser(loginUser_Id);
            String jsonResults=JSON.toJSONString(role);
            int result = sysRoleService.addSysRole(role);
            if(result <= 0){
                log(loginUser_Id,"新增角色","新增角色失败"+jsonResults,"角色管理(涉案财物系统)",false);
                return new JsonResult(ResultCodes.ERROR, StaticObj.UPDATE_MSG_ERROR);
            }
            log(loginUser_Id,"新增角色",jsonResults,"角色管理(涉案财物系统)",false);
        } catch (Exception e) {
            e.printStackTrace();
            log(loginUser_Id,"新增角色",e.toString(),"角色管理(涉案财物系统)",true);
            return new JsonResult(ResultCodes.ERROR, StaticObj.UPDATE_MSG_ERROR);
        }
        AuthElementTagProcessor.initAuthMap();
        return new JsonResult(ResultCodes.SUCCESS, StaticObj.UPDATE_MSG_SUCCESS, "/role/list");
    }

    @RequestMapping("/edit")
    @ResponseBody
    public JsonResult edit(SysRole role){
        String loginUser_Id="";
        try {
            loginUser_Id= usersUtil.getLoginUser_Id();
            int countName = sysRoleService.checkRepeatName(role);
            if(countName > 0){
                return new JsonResult(ResultCodes.ERROR, StaticObj.REPEAT_MSG_NAME);
            }
            int countCode = sysRoleService.checkRepeatCode(role);
            if(countCode > 0){
                return new JsonResult(ResultCodes.ERROR, StaticObj.REPEAT_MSG_CODE);
            }
            role.setUpdateUser(loginUser_Id);
            String jsonResults=JSON.toJSONString(role);
            int result = sysRoleService.editSysRole(role);
            if(result <= 0){
                log(loginUser_Id,"编辑角色","编辑角色失败"+jsonResults,"角色管理(涉案财物系统)",false);
                return new JsonResult(ResultCodes.ERROR,StaticObj.UPDATE_MSG_ERROR);
            }
            log(loginUser_Id,"编辑角色","编辑后角色信息为:"+jsonResults,"角色管理(涉案财物系统)",false);
        } catch (Exception e) {
            e.printStackTrace();
            log(loginUser_Id,"编辑角色",e.toString(),"角色管理(涉案财物系统)",true);
            return new JsonResult(ResultCodes.ERROR,StaticObj.UPDATE_MSG_ERROR);
        }
        AuthElementTagProcessor.initAuthMap();
        return new JsonResult(ResultCodes.SUCCESS,StaticObj.UPDATE_MSG_SUCCESS, "/role/list");
    }

    @RequestMapping("delBatch")
    @ResponseBody
    public JsonResult delBatch(String ids){
        String user_Id="";
        try {
            user_Id= usersUtil.getLoginUser_Id();
            JsonResult result = sysRoleService.delBatch(ids);
            log(user_Id,"删除角色","批量删除id为"+ids+"的角色信息","角色管理(涉案财物系统)",false);
            AuthElementTagProcessor.initAuthMap();
            return result;
        } catch (Exception e) {
            e.printStackTrace();
            log(user_Id,"删除角色",e.toString(),"角色管理(涉案财物系统)",true);
            return new JsonResult(ResultCodes.ERROR,StaticObj.UPDATE_MSG_ERROR);
        }
    }
}
