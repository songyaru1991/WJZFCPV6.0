package util.web;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import org.apache.commons.lang3.StringUtils;
import org.apache.poi.ss.formula.functions.T;
import org.springframework.util.CollectionUtils;
import util.exception.BaseException;
import util.exception.ErrorCode;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class UserContextUtil {
    //用户id
    public final static String USER_IN_HEAD = "X-User";
    public static String getMode(){
        return  getProperty("mode",String.class);
    }
    //获取登录名
    public static String getUserName(){
        return  getProperty("loginName",String.class);
    }
    //获取姓名
    public static String getName(){
        return  getProperty("name",String.class);
    }
    //获取警号
    public static String getPoliceNum(){
        return  getProperty("policeNum",String.class);
    }
    public static Integer getUserId(){
        return  getProperty("id",Integer.class);
    }
    public static Integer getOrgId(){
        return  getProperty("mode",Integer.class);
    }
    public static List<Integer> getRoleIds(){
        JSONArray roles = getProperty("sysRoles",JSONArray.class);
        if (CollectionUtils.isEmpty(roles)){
            throw new BaseException(ErrorCode.SERVER_ERROR.value(),"获取用户角色组为空");
        }
        return roles.toJavaList(JSONObject.class)
                .stream()
                .map(item ->  item.getInteger("id"))
                .collect(Collectors.toList());
    }
    public static <T> T getUser(Class<T> tClass){
        String json = null;
        try {
            json = URLDecoder.decode(HttpServletUtil.getRequestHead(USER_IN_HEAD),"UTF-8");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        if (StringUtils.isEmpty(json)){
            throw new BaseException(ErrorCode.SERVER_ERROR.value(),"获取用户信息为空");
        }
        return JSON.parseObject(json,tClass);
    }
    public static JSONObject getUser(){
        return getUser(JSONObject.class);
    }
    public static <T> T getProperty(String propertyName, Class<T> tClass){
        return  getUser().getObject(propertyName,tClass);
    }
}
