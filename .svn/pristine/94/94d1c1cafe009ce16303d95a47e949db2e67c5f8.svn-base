package com.netmarch.figurecloud.auth.core.security.model.token;

import com.netmarch.figurecloud.auth.core.security.exceptions.InvalidJwtToken;
import com.netmarch.figurecloud.auth.core.security.exceptions.JwtExpiredTokenException;
import io.jsonwebtoken.*;
import lombok.extern.log4j.Log4j;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.authentication.BadCredentialsException;

/** 
* @Description: RawAccessJwtToken 解析验证token
* @Author: fengxiang
* @Date: 2019/2/18 9:54
*/
@Log4j
public class RawAccessJwtToken implements JwtToken {
    private static Logger logger = LoggerFactory.getLogger(RawAccessJwtToken.class);
            
    private String token;
    
    public RawAccessJwtToken(String token) {
        this.token = token;
    }

    /**
     * 解析和验证JWT令牌签名。
     * 
     * @throws BadCredentialsException
     * @throws JwtExpiredTokenException
     * 
     */
    public Jws<Claims> parseClaims(String signingKey) {
        try {
            return Jwts.parser().setSigningKey(signingKey).parseClaimsJws(this.token);
        } catch (UnsupportedJwtException | MalformedJwtException | IllegalArgumentException | SignatureException ex) {
            log.error("JWT Token:"+this.token);
            throw new InvalidJwtToken("错误的令牌" );
        } catch (ExpiredJwtException expiredEx) {
            log.error("登录过期了:"+this.token);
            throw new JwtExpiredTokenException(this, "登录过期了");
        }
    }

    @Override
    public String getToken() {
        return token;
    }
}
