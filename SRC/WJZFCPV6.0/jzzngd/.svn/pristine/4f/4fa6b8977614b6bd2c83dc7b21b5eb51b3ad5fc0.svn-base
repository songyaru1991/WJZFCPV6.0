package com.netmarch.jzzngd.system.controller;

import com.github.pagehelper.Page;
import com.netmarch.jzzngd.common.controller.FrontBaseController;
import com.netmarch.jzzngd.common.utils.JwtUtil;
import com.netmarch.jzzngd.system.bean.Log;
import com.netmarch.jzzngd.system.bean.StaticObj;
import com.netmarch.jzzngd.system.model.LogQuery;
import com.netmarch.jzzngd.system.service.LogService;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import util.DateUtil;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;

/**
 * @ClassName LogController
 * @Description 日志管理
 * @Author songyaru
 * @Date 2019/4/29
 * @Version 1.0
 **/
@RequestMapping(value = "log")
@Controller
public class LogController extends FrontBaseController {


    @Autowired
    public LogService logService;

    @GetMapping("list")
    public ModelAndView list(HttpServletRequest request, LogQuery logQuery){
        String user_Id="",loginname="";
        ModelAndView mv = new ModelAndView("system/log/list");
        try {
        Cookie[] cookies = request.getCookies();
        if (cookies != null) {
            for (Cookie c : cookies) {
                if (c.getName().equals("sid")) {
                    user_Id = JwtUtil.getClaim(c.getValue(), StaticObj.USERID);
                }
                else if (c.getName().equals("loginName")) {
                    loginname = c.getValue();
                }
            }
        }
        log(loginname,"查询列表","获取日志信息列表","操作日志",false);

        if(StringUtils.isEmpty(logQuery.getStartTime())){
            logQuery.setStartTime(DateUtil.getDate("yyyy-MM-dd") + " 00:00:00");
        }
        if(StringUtils.isEmpty(logQuery.getEndTime())){
            logQuery.setEndTime(DateUtil.getDate("yyyy-MM-dd") + " 23:59:59");
        }
        Page<Log> list = logService.listLog(logQuery);
        mv.addObject("list",list);
        mv.addObject("logQuery",logQuery);
        } catch (Exception e) {
            log(loginname,"查询列表",e.toString(),"异常日志",true);
            e.printStackTrace();
        }
        return  mv;
    }

    @GetMapping("errorLogList")
    public ModelAndView errorLogList(HttpServletRequest request, LogQuery logQuery){
        String user_Id="",loginname="";
        ModelAndView mv = new ModelAndView("system/log/list");
        try {
            Cookie[] cookies = request.getCookies();
            if (cookies != null) {
                for (Cookie c : cookies) {
                    if (c.getName().equals("sid")) {
                        user_Id = JwtUtil.getClaim(c.getValue(), StaticObj.USERID);
                    }
                    else if (c.getName().equals("loginName")) {
                        loginname = c.getValue();
                    }
                }
            }
            log(loginname,"查询列表","获取日志信息列表","操作日志",false);

            if(StringUtils.isEmpty(logQuery.getStartTime())){
                logQuery.setStartTime(DateUtil.getDate("yyyy-MM-dd") + " 00:00:00");
            }
            if(StringUtils.isEmpty(logQuery.getEndTime())){
                logQuery.setEndTime(DateUtil.getDate("yyyy-MM-dd") + " 23:59:59");
            }
            Page<Log> list = logService.listExceptionLog(logQuery);
            mv.addObject("list",list);
            mv.addObject("logQuery",logQuery);
        } catch (Exception e) {
            log(loginname,"查询列表",e.toString(),"异常日志",true);
            e.printStackTrace();
        }
        return  mv;
    }

}
